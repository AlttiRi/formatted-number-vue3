{"version":3,"sources":["source-maps:///components/NumberTrio.vue","source-maps:///components/FormattedNumber.vue","source-maps:///components/NoDoubleClickSelectable.vue","source-maps:///components/Main.vue","node-modules:///style-inject/dist/style-inject.es.js","source-maps:///index.js"],"names":["script$3","name","props","value","type","String","required","[object Object]","Boolean","match","position","Number","count","padding","computed","this","parts","part1","part2","el","isLast","substring","length","script$2","number","precision","default","isNegative","integer","decimal","toString","split","subDecimal","getTrios","methods","trios","offset","i","part","push","components","NumberTrio","script$1","timerId","$el","style","userSelect","window","getSelection","empty","clearTimeout","setTimeout","script","MAX_SAFE_INTEGER","color","randomHexColor","FormattedNumber","NoDoubleClickSelectable","numbers","Math","trunc","random","join","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","createApp","MainComponent","mount"],"mappings":"4BAOA,IAAAA,SAAe,CACbC,KAAM,aACNC,MAAO,CACLC,MAAO,CACLC,KAAMC,OACNC,SAAU,KACVC,UAAUJ,OACR,OAAOK,QAAQL,MAAMM,MAAM,YAG/BC,SAAU,CACRN,KAAMO,OACNL,SAAU,MAEZM,MAAO,CACLR,KAAMO,OACNL,SAAU,MAEZO,QAAS,CACPT,KAAMC,SAGVS,SAAU,CACRP,QACE,OAAOQ,KAAKC,MAAMC,OAEpBV,QACE,OAAOQ,KAAKC,MAAME,OAEpBX,QACE,MAAMY,GAAKJ,KAAKZ,MAChB,GAAIY,KAAKK,OAAQ,CACf,MAAO,CACLH,MAAOE,GACPD,MAAO,QAEJ,CACL,MAAO,CACLD,MAAOE,GAAGE,UAAU,EAAGF,GAAGG,OAAS,GACnCJ,MAAOC,GAAGE,UAAUF,GAAGG,OAAS,MAItCf,SACE,OAAOQ,KAAKL,WAAaK,KAAKH,MAAQ,glBC5B5C,IAAAW,SAAe,CACbtB,KAAM,kBACNC,MAAO,CACLsB,OAAQ,CACNpB,KAAMO,OACNL,SAAU,MAEZmB,UAAW,CACTrB,KAAMO,OACNe,QAAS,GAEXb,QAAS,CACPT,KAAMC,OACNqB,QAAS,OAGbZ,SAAU,CAERP,aACE,OAAOQ,KAAKC,MAAMW,YAGpBpB,UACE,OAAOQ,KAAKC,MAAMY,SAGpBrB,UACE,OAAOQ,KAAKC,MAAMa,SAEpBtB,QACE,MAAOqB,QAASC,SAAWd,KAAKS,OAAOM,WAAWC,MAAM,KACxD,MAAMJ,WAAaZ,KAAKS,OAAS,EACjC,MAAO,CACLG,WAAAA,WACAC,QAASD,WAAaC,QAAQP,UAAU,GAAKO,QAC7CC,QAAAA,UAGJtB,iBACE,MAAOqB,QAASC,SAAW,CAACd,KAAKa,QAASb,KAAKc,SAC/C,MAAMJ,UAAYV,KAAKU,UAEvB,GAAII,QAAS,CACX,MAAMG,WAAaH,QAAQR,UAAU,EAAGI,UAAY,EAAIG,QAAQN,QAEhE,OAAOU,WAAWvB,MAAM,QAAU,GAAKuB,WAEzC,OAAO,MAETzB,eACE,OAAOQ,KAAKkB,SAASlB,KAAKa,WAG9BM,QAAS,CACP3B,SAASiB,QACP,MAAMW,MAAQ,GACd,MAAMC,QAAWZ,OAAOF,OAAS,EAAK,GAAK,EAC3C,IAAK,IAAIe,EAAID,OAAQC,EAAIb,OAAOF,OAAQe,GAAK,EAAG,CAC9C,MAAMC,KAAOd,OAAOH,UAAUgB,EAAGA,EAAI,GACrCF,MAAMI,KAAKD,MAEb,OAAOH,QAGXK,WAAY,CAAAC,WAACA,ysCCjFf,IAAAC,SAAe,CACbzC,KAAM,0BACNM,OACE,MAAO,CACLoC,QAAS,OAGbT,QAAS,CACP3B,8BACEQ,KAAK6B,IAAIC,MAAMC,WAAa,OAC5BC,OAAOC,eAAeC,QAEtBC,aAAanC,KAAK4B,SAClB5B,KAAK4B,QAAUQ,YAAW,KACxBpC,KAAK6B,IAAIC,MAAMC,WAAa,KAC3B,gZCVT,IAAAM,OAAe,CACbnD,KAAM,OACNM,OACE,MAAO,CACLJ,MAAOQ,OAAO0C,iBACdC,MAAO,OAGXpB,QAAS,CACP3B,UACEQ,KAAKuC,MAAQC,mBAGjBf,WAAY,iBACVgB,iCACAC,WAIJ,SAASF,iBACP,MAAMG,QAAU,CACd/C,OAAOgD,KAAKC,MAAMD,KAAKE,SAAW,MAClClD,OAAOgD,KAAKC,MAAMD,KAAKE,SAAW,MAClClD,OAAOgD,KAAKC,MAAMD,KAAKE,SAAW,OAEpC,MAAO,OAAOH,QAAQI,gwBCpCxB,SAASC,YAAYC,IAAKC,KACxB,GAAKA,WAAa,EAAIA,IAAM,GAC5B,IAAIC,SAAWD,IAAIC,SAEnB,IAAKF,YAAcG,WAAa,YAAa,CAAE,OAE/C,IAAIC,KAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAClE,IAAIxB,MAAQsB,SAASG,cAAc,SACnCzB,MAAMzC,KAAO,WAEb,GAAI8D,WAAa,MAAO,CACtB,GAAIE,KAAKG,WAAY,CACnBH,KAAKI,aAAa3B,MAAOuB,KAAKG,gBACzB,CACLH,KAAKK,YAAY5B,YAEd,CACLuB,KAAKK,YAAY5B,OAGnB,GAAIA,MAAM6B,WAAY,CACpB7B,MAAM6B,WAAWC,QAAUX,QACtB,CACLnB,MAAM4B,YAAYN,SAASS,eAAeZ,6tBCpB9Ca,IAAAA,UAAUC,QAAeC,MAAM","sourcesContent":["<template lang=\"pug\">\nspan.trio\n  span(v-if=\"part1\") {{part1}}\n  span.padded(v-if=\"part2\" :style=\"{letterSpacing: padding}\") {{part2}}\n</template>\n\n<script>\nexport default {\n  name: \"NumberTrio\",\n  props: {\n    value: {\n      type: String,\n      required: true,\n      validator(value) {\n        return Boolean(value.match(/^\\d+$/));\n      }\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n    count: {\n      type: Number,\n      required: true,\n    },\n    padding: { // letterSpacing value, e.g., \"5px\"\n      type: String\n    },\n  },\n  computed: {\n    part1() {\n      return this.parts.part1;\n    },\n    part2() {\n      return this.parts.part2;\n    },\n    parts() {\n      const el = this.value;\n      if (this.isLast) {\n        return {\n          part1: el,\n          part2: \"\"\n        };\n      } else {\n        return {\n          part1: el.substring(0, el.length - 1),\n          part2: el.substring(el.length - 1)\n        };\n      }\n    },\n    isLast() {\n      return this.position === this.count - 1;\n    }\n  }\n};\n</script>","<!--\n  It works OK only with integer numbers and partially with decimal numbers\n  (no support of `1.2e-34`, `Infinity`, `NaN`, for example)\n -->\n<template lang=\"pug\">\nspan.formatted-number\n  span.minus(v-if=\"isNegative\") -\n  span.integer\n    NumberTrio(\n        v-for=\"(integerTrio, index) of integerTrios\"\n        :value=\"integerTrio\"\n        :position=\"index\"\n        :count=\"integerTrios.length\"\n        :key=\"index\"\n        :padding=\"padding\"\n    )\n  span.point(v-if=\"decimalTrimmed\") .\n  span.decimal(v-if=\"decimalTrimmed\") {{decimalTrimmed}}\n</template>\n\n<script>\nimport NumberTrio from \"./NumberTrio.vue\";\n\nexport default {\n  name: \"FormattedNumber\",\n  props: {\n    number: {\n      type: Number,\n      required: true,\n    },\n    precision: { // Count of numbers after the point (the dot), if the integer part contains 1 digit\n      type: Number,\n      default: 2 // result for \"3\": \"1.123\", \"10.12\", \"100.1\", \"1000\"; for \"2\": \"1.01\", \"10\", \"100\";\n    },\n    padding: {   // letterSpacing value, e.g., \"5px\"\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    /** @returns {Boolean} */\n    isNegative() {\n      return this.parts.isNegative;\n    },\n    /** @returns {String} */\n    integer() {\n      return this.parts.integer;\n    },\n    /** @returns {String} */\n    decimal() {\n      return this.parts.decimal;\n    },\n    parts() {\n      const [integer, decimal] = this.number.toString().split(\".\");\n      const isNegative = this.number < 0;\n      return {\n        isNegative,\n        integer: isNegative ? integer.substring(1) : integer,\n        decimal\n      };\n    },\n    decimalTrimmed() {\n      const [integer, decimal] = [this.integer, this.decimal];\n      const precision = this.precision;\n\n      if (decimal) {\n        const subDecimal = decimal.substring(0, precision + 1 - integer.length);\n        // if contains only zeros\n        return subDecimal.match(/^0*$/) ? \"\" : subDecimal;\n      }\n      return null;\n    },\n    integerTrios() {\n      return this.getTrios(this.integer);\n    }\n  },\n  methods: {\n    getTrios(number) {\n      const trios = [];\n      const offset = ((number.length % 3) - 3) % 3;\n      for (let i = offset; i < number.length; i += 3) {\n        const part = number.substring(i, i + 3);\n        trios.push(part);\n      }\n      return trios;\n    }\n  },\n  components: {NumberTrio}\n};\n</script>","<template lang=\"pug\">\nspan.no-double-click-selectable(@click=\"preventUnnecessarySelecting\")\n  slot\n</template>\n\n<script>\nexport default {\n  name: \"NoDoubleClickSelectable\",\n  data() {\n    return {\n      timerId: null\n    }\n  },\n  methods: {\n    preventUnnecessarySelecting() {\n      this.$el.style.userSelect = \"none\";\n      window.getSelection().empty();\n\n      clearTimeout(this.timerId);\n      this.timerId = setTimeout(() => {\n        this.$el.style.userSelect = \"\";\n      }, 500);\n    }\n  }\n};\n</script>","<template lang=\"pug\">\ndiv.main\n  span.number(@click=\"onClick\")\n    NoDoubleClickSelectable\n      FormattedNumber(:style=\"{color}\" :number=\"value\")\n</template>\n\n<script>\nimport FormattedNumber from \"./FormattedNumber.vue\";\nimport NoDoubleClickSelectable from \"./NoDoubleClickSelectable.vue\";\n\nexport default {\n  name: \"Main\",\n  data() {\n    return {\n      value: Number.MAX_SAFE_INTEGER,\n      color: null\n    }\n  },\n  methods: {\n    onClick() {\n      this.color = randomHexColor();\n    }\n  },\n  components: {\n    FormattedNumber,\n    NoDoubleClickSelectable\n  }\n};\n\nfunction randomHexColor() {\n  const numbers = [\n    Number(Math.trunc(Math.random() * 256)),\n    Number(Math.trunc(Math.random() * 256)),\n    Number(Math.trunc(Math.random() * 256))\n  ];\n  return `rgb(${numbers.join()})`;\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.main\n  display: flex\n  flex-direction: column\n  justify-content: center\n  align-items: center\n  height: 100%\n\n.main:deep()\n  .formatted-number\n    font-size: 8vw\n    color: cornflowerblue\n    text-shadow: 0 0 2vw #08080840\n    .trio\n      .padded\n        letter-spacing: 1.6vw\n\n@media all and (min-width: 1500px)\n  .main:deep()\n    .formatted-number\n      font-size: 120px\n      text-shadow: 0 0 30px #08080840\n      .trio\n        .padded\n          letter-spacing: 24px\n</style>","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {createApp} from \"vue\";\nimport MainComponent from \"./components/Main.vue\";\n\ncreateApp(MainComponent).mount(\"#app\");"]}